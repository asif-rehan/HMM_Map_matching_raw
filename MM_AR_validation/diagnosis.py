'''
Created on Feb 16, 2015

@author: asr13006

Diagnosis of Viterbi. Relevant_files orng datafile
'''
from matplotlib import pyplot as plt
import numpy as np
fig = plt.figure()
ax = plt.axes()

ax.plot(728461.183075588, 4631753.351893077, 'ro', zorder=100)
ax.annotate("t=0 cp1",xy=(728461.183075588, 4631753.351893077), 
            xytext=(-40,20), textcoords='offset points')
ax.plot(728481.1384234718, 4631771.503874317, 'ro', zorder=100)
ax.annotate("t=0 cp2",xy=(728481.1384234718, 4631771.503874317), 
            xytext=(-40,20), textcoords='offset points')
ax.plot(728675.4414764805, 4631879.223877374, 'ro', zorder=100)
ax.annotate("t=1 cp1",xy=(728675.4414764805, 4631879.223877374), 
            xytext=(20,20), textcoords='offset points')
bridge = [(728461.183075588, 4631753.351893077), (728418.4471356437, 4631714.499849313), (728418.4471356437, 4631714.499849313), (728481.1384234718, 4631771.503874317), (728544.1972221225, 4631828.679746407), (728579.9923637034, 4631860.566779728), (728633.538580009, 4631908.460396009), (728762.6295774302, 4631843.016164692), (728418.4471356437, 4631714.499849313), (728675.4414764805, 4631879.223877374)]
e, n = zip(*bridge)
e = np.array([e]).T
n = np.array([n]).T
ax.quiver(e[:-1], n[:-1], e[1:]-e[:-1], n[1:]-n[:-1], 
          scale=1, scale_units='xy', angles='xy')
ax.scatter(e, n, c=range(len(bridge)), cmap=plt.get_cmap(), zorder=10)
for (x,y) in bridge:
    ax.annotate("bridge #{}".format(bridge.index((x,y))), xy=(x,y), 
            xytext=(-90,-10), textcoords='offset points')
plt.show()

#shortest path function debugging

plt.plot(728461.183076, 4631753.35189, 'bo')
ax.annotate("cp1",xy=(728461.183076, 4631753.35189), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728481.1384234718, 4631771.503874317, 'ro')
ax.annotate("cp1_e_n_d_0",xy=(728481.1384234718, 4631771.503874317), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728418.4471356437, 4631714.499849313, 'rs')
ax.annotate("cp1_e_n_d_1",xy=(728418.4471356437, 4631714.499849313), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728675.441476, 4631879.22388, 'bo')
ax.annotate("cp2",xy=(728675.441476, 4631879.22388), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728762.6295774302, 4631843.016164692, 'r+')
ax.annotate("cp2_e_n_d_0",xy=(728762.6295774302, 4631843.016164692), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728633.538580009, 4631908.460396009, 'rs')
ax.annotate("cp2_e_n_d_0",xy=(728633.538580009, 4631908.460396009), 
            xytext=(20,20), textcoords='offset points')
from MM_AR_validation.validation import Validate
v = Validate("")
v.plot_roadnetwork(ax, fig)
#cp1_END0 to cp2_END0
end_to_end_seq = [(728418.4471356437, 4631714.499849313), (728481.1384234718, 4631771.503874317), (728544.1972221225, 4631828.679746407), (728579.9923637034, 4631860.566779728), (728633.538580009, 4631908.460396009), (728762.6295774302, 4631843.016164692)]
v.plot_quiver_seq(end_to_end_seq, ax, fig)
shortest_path = [(728461.183075588, 4631753.351893077), 
                 (728418.4471356437, 4631714.499849313), 
                 (728418.4471356437, 4631714.499849313), 
                 (728481.1384234718, 4631771.503874317), 
                 (728544.1972221225, 4631828.679746407), 
                 (728579.9923637034, 4631860.566779728), 
                 (728633.538580009, 4631908.460396009), 
                 (728762.6295774302, 4631843.016164692), 
                 (728418.4471356437, 4631714.499849313), 
                 (728675.4414764805, 4631879.223877374)]
v.plot_quiver_seq(shortest_path, ax, fig)
for (x,y) in shortest_path:
    ax.annotate("#{}".format(shortest_path.index((x,y))), xy=(x,y), 
            xytext=(-40,-10), textcoords='offset points')
#after debugging
shortest_path = [(728461.183075588, 4631753.351893077), 
                 (728418.4471356437, 4631714.499849313), 
                 (728481.1384234718, 4631771.503874317), 
                 (728544.1972221225, 4631828.679746407), 
                 (728579.9923637034, 4631860.566779728), 
                 (728633.538580009, 4631908.460396009), 
                 (728762.6295774302, 4631843.016164692), 
                 (728675.4414764805, 4631879.223877374)]
#cp1_END0 to cp2_END1
end_to_end_seq = [(728418.4471356437, 4631714.499849313), (728481.1384234718, 4631771.503874317), (728544.1972221225, 4631828.679746407), (728579.9923637034, 4631860.566779728), (728633.538580009, 4631908.460396009), (728762.6295774302, 4631843.016164692)]
shortest_path = [(728461.183075588, 4631753.351893077), (728418.4471356437, 4631714.499849313), (728481.1384234718, 4631771.503874317), (728544.1972221225, 4631828.679746407), (728579.9923637034, 4631860.566779728), (728633.538580009, 4631908.460396009), (728762.6295774302, 4631843.016164692), (728675.4414764805, 4631879.223877374)]

####for another pair of cand pts
plt.plot(728675.441476, 4631879.22388, 'bo')
ax.annotate("cp1",xy=(728675.441476, 4631879.22388), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728873.167358, 4631881.57467, 'ro')
ax.annotate("cp1_e_n_d_0",xy=(), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728418.4471356437, 4631714.499849313, 'rs')
ax.annotate("cp1_e_n_d_1",xy=(728418.4471356437, 4631714.499849313), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728873.167358, 4631881.57467, 'bo')
ax.annotate("cp2",xy=(728873.167358, 4631881.57467), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728762.6295774302, 4631843.016164692, 'r+')
ax.annotate("cp2_e_n_d_0",xy=(728762.6295774302, 4631843.016164692), 
            xytext=(20,20), textcoords='offset points')
plt.plot(728633.538580009, 4631908.460396009, 'rs')
ax.annotate("cp2_e_n_d_0",xy=(728633.538580009, 4631908.460396009), 
            xytext=(20,20), textcoords='offset points')
shortest_path = [(728675.4414764805, 4631879.223877374), (728762.6295774302, 4631843.016164692), (728873.1673577781, 4631881.574673017), (728873.1673577781, 4631881.574673017)]